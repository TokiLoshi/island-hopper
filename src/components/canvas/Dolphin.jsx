// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { animated, useSpring } from '@react-spring/three'

export function Dolphin({
  initialPosition = [8, -11, -150],
  initialRotation = [0.27, 0.61, -0.2],
  scale = 0.08,
  ...props
}) {
  const { nodes, materials } = useGLTF('/models/Dolphin.glb')
  const { x, y, z } = useSpring({
    // Keep rotation on the z axis while moving from left to right
    from: {
      x: initialPosition[0],
      y: initialPosition[1],
      z: initialPosition[2],
    },
    to: [
      {
        x: initialPosition[0] + 20,
        y: initialPosition[1] + 2,
        z: initialPosition[2],
        delay: 200,
      },
      {
        x: initialPosition[0] - 20,
        y: initialPosition[1] - 2,
        z: initialPosition[2],
        delay: 200,
      },
      {
        x: initialPosition[0],
        y: initialPosition[1],
        z: initialPosition[2],
        delay: 200,
      },
    ],
    config: {
      mass: 5,
      tension: 40,
      friction: 80,
    },
    loop: true,
    immediate: false,
  })
  return (
    <animated.group
      {...props}
      dispose={null}
      position-x={x}
      position-y={y}
      position-z={z}
      rotation={initialRotation}
      scale={scale}
    >
      <mesh castShadow receiveShadow geometry={nodes.Geo_Dolphin.geometry} material={materials.lambert2SG} />
    </animated.group>
  )
}

useGLTF.preload('/models/Dolphin.glb')
