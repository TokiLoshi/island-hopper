/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from 'three'

const ACTIONS = [
  'SharkArmature|SharkArmature|SharkArmature|Swim_Bite|SharkArmature|Swim_Bite',
  'SharkArmature|SharkArmature|SharkArmature|Swim_Fast|SharkArmature|Swim_Fast',
  'SharkArmature|SharkArmature|SharkArmature|Swim|SharkArmature|Swim',
  'SharkArmature|SharkArmature|SharkArmature|Swim_Bite|SharkArmature|Swim_Bite',
]
export function Shark(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/Shark.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {}, [actions])

  const handleClick = (event) => {
    event.stopPropagation()
    const randomNumber = Math.floor(Math.random() * ACTIONS.length)

    const actionName = ACTIONS[randomNumber]
    const action = actions[actionName]

    if (action) {
      action.reset().setLoop(THREE.LoopOnce, 1).play()
    }
  }

  return (
    <group ref={group} {...props} dispose={null} onClick={handleClick}>
      <group name='Root_Scene'>
        <group name='RootNode'>
          <group name='SharkArmature' rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Root} />
            <primitive object={nodes.Abdomen} />
            <primitive object={nodes.Center} />
          </group>
          <skinnedMesh
            name='Shark'
            geometry={nodes.Shark.geometry}
            material={materials.AtlasMaterial}
            skeleton={nodes.Shark.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <skinnedMesh
            name='Shark001'
            geometry={nodes.Shark001.geometry}
            material={materials.AtlasMaterial}
            skeleton={nodes.Shark001.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Shark.glb')
